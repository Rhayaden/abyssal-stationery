@inject IToastService toastService


<div class="p-4 pt-0 md:p-5 md:pt-0 text-center">
    <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-red-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
        </svg>
        <h3 class="text-lg font-normal text-slate-950 font-semibold">Are you sure you want to delete this @Object.ToLower() ?</h3>
    @if(@Object == "Category")
    {
        <p class="text-red-500">Warning: When you delete this category, the products in this category will also be deleted.</p>
    }
    <button @onclick="DeleteHandler" type="button" class="mt-5 text-white bg-red-600 hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-red-200 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center">
            Yes, I'm sure
            </button>
        <button @onclick="CancelHandler" type="button" class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-indigo-500 focus:z-10 focus:ring-4 focus:ring-gray-100">No, cancel</button>
</div>

@code {
    [Inject]
    HttpClient Client { get; set; }

    [Inject]
    ILocalStorageService localStorageService { get; set; }

    [Inject]
    NavigationManager navigationManager { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public string Object { get; set; }

    [Parameter]
    public Guid ObjectId { get; set; }

    private async Task CancelHandler()
    {
        await ModalInstance.CloseAsync(ModalResult.Cancel());
    }

    protected async Task DeleteHandler()
    {
        var authState = await AuthState;
        var isAdmin = await localStorageService.GetItemAsStringAsync("isAdmin");
        if (!authState.User.Identity.IsAuthenticated && isAdmin != "true")
        {
            return;
        }

        var data = await Client.DeleteAsync($"api/{Object}/Delete/{ObjectId}");

        if (data != null)
        {
            toastService.ShowInfo("Successfully Deleted");
            await ModalInstance.CloseAsync(ModalResult.Ok());
            if(Object == "Product")
            {
                navigationManager.NavigateTo("/admin/products");
            }
            else
            {
                navigationManager.NavigateTo("/admin/categories");
            }
        }
    }
}
