@page "/products/page/{Page:int}"

<div class="flex h-screen">

    <!-- Sidebar -->
    <div class="hidden md:flex flex-col w-64 bg-indigo-200">
        <div class="flex items-center justify-center h-16">
            <span class="text-indigo-600 font-bold uppercase">Categories</span>
        </div>
        <div class="flex flex-col flex-1 overflow-y-auto">
            <nav class="flex-1 px-2 py-4 bg-gray-100">
                <button @onclick="GetAllProductsHandler" class="flex items-center px-4 py-2 font-semibold text-indigo-600 rounded hover:text-white hover:bg-indigo-600">
                    All Products
                </button>
                @foreach(var category in categories)
                {
                    <button @onclick="()=>CategoryChangeHandler(category.Id)" class="flex items-center px-4 py-2 font-semibold text-indigo-600 rounded hover:text-white hover:bg-indigo-600">
                        @category.Name
                    </button>
                }
            </nav>
        </div>
    </div>

    <!-- Main Content -->
    <div class="flex flex-col flex-1">
        <div class="flex items-center justify-between h-16 bg-white border-b border-indigo-200 bg-indigo-200 z-1">
            <div class="flex items-center px-4 w-full">
                <form class="w-full mx-auto" @onsubmit="SearchHandler">
                    <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only">Search</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
                            </svg>
                        </div>
                        <input @bind="@search" type="search" id="default-search" class="block w-full p-4 ps-10 text-sm text-gray-900 rounded-lg bg-gray-50" placeholder="Search by title..." />
                        <button type="submit" class="text-white absolute end-2.5 bottom-2.5 bg-indigo-600 hover:bg-indigo-500 focus:outline-none font-medium rounded-lg text-sm px-4 py-2">Search</button>
                    </div>
                </form>
            </div>
        </div>
        @if (productList.Count() > 0)
        {
            <div class="mx-auto max-w-7xl flex-1 px-4 sm:px-6 lg:px-8 mt-4">
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
                    @foreach (var product in productList)
                    {
                        <a href="/products/@product.Id" class="mx-auto sm:mr-0 group cursor-pointer lg:mx-auto bg-white transition-all duration-500 p-1 border rounded">
                            <div class="">
                                <img src="@product.Image" alt="@product.Title" class="w-full aspect-square">
                            </div>
                            <div class="mt-5">
                                <div class="flex items-center justify-between">
                                    <h6 class="font-semibold text-xl leading-8 text-black transition-all duration-500 group-hover:text-indigo-600">@product.Title</h6>
                                    <h6 class="font-semibold text-xl leading-8 text-indigo-600">$@product.Price</h6>
                                </div>
                                <p class="mt-2 font-normal text-sm leading-6 text-gray-500">@product.Category.Name</p>
                            </div>
                        </a>
                    }
                </div>
            </div>
            <Paginator ObjectCount="productCount" ObjectName="products" CurrentPage="Page" Size="ItemsPerPage.Product" />
        }
        else
        {
            <p class="text-center font-bold text-xl h-screen flex-1 pt-20">No products found</p>
        }
    </div>
</div>

@code {
    [Inject]
    HttpClient Client { get; set; }

    [Inject]
    AppStateManager appStateManager { get; set; }

    private IEnumerable<CategoryDTO> categories = new List<CategoryDTO>();
    private IEnumerable<ProductDTO> productList = new List<ProductDTO>();

    private string? search { get; set; }
    private int productCount { get; set; }

    [Parameter]
    public int Page { get; set; } = 1;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            appStateManager.OnPageChanged += async component => await AppStateChanged(component);
            appStateManager.OnCategoriesChanged += async component => await AppStateChanged(component);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        categories = await Client.GetServiceResponseAsync<IEnumerable<CategoryDTO>>("api/Category/Get");
        productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/GetPage/{Page}");
        productCount = await Client.GetServiceResponseAsync<int>($"api/Product/Count");
    }

    private async Task CategoryChangeHandler(Guid categoryId)
    {
        productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/Get/Category/{categoryId}");
    }

    private async Task GetAllProductsHandler()
    {
        productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/GetPage/{Page}");
    }

    private async Task AppStateChanged(ComponentBase component)
    {
        productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/GetPage/{Page}");
        await InvokeAsync(StateHasChanged);
    }

    private async Task SearchHandler()
    {
        if (String.IsNullOrEmpty(search))
        {
            productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/GetPage/1");
            return;
        }
        productList = await Client.GetServiceResponseAsync<IEnumerable<ProductDTO>>($"api/Product/Search/{search.ToLower()}");
    }
}
