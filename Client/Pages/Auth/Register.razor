@page "/signup"
@inject IToastService toastService

<div class="w-full grid grid-cols-2 flex justify-center content-center">
	<img src="./images/auth.jpg" class="h-auto w-full col-span-2" />
	<div class="col-span-2 justify-center lg:absolute w-full flex md:flex-col lg:flex-row lg:justify-end bg-transparent lg:mr-20">
		<div class="flex flex-col justify-center mt-20 lg:mr-20 items-center">
			<h3 class="lg:mt-20 lg:mr-20 font-bold text-2xl">Create an Account</h3>
			<EditForm Model=@userDTO OnValidSubmit="SubmitHandler" class="bg-transparent rounded px-8 pt-6 pb-8 mb-4 lg:mr-20 w-full">
				<DataAnnotationsValidator />
				<div class="mb-4">
					<label class="block text-gray-700 text-sm font-bold mb-2" for="firstName">
						First Name
					</label>
					<input @bind="@userDTO.FirstName" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="firstName" type="text">
					<ValidationMessage For='@(()=>@userDTO.FirstName)' />
				</div>
				<div class="mb-6">
					<label class="block text-gray-700 text-sm font-bold mb-2" for="lastName">
						Last Name
					</label>
					<input @bind="@userDTO.LastName" class="shadow appearance-none border border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="lastName" type="text">
					<ValidationMessage For='@(()=>@userDTO.LastName)' />
				</div>
				<div class="mb-4">
					<label class="block text-gray-700 text-sm font-bold mb-2" for="email">
						Email Address
					</label>
					<input @bind="@userDTO.Email" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="email" type="email">
					<ValidationMessage For='@(()=>@userDTO.Email)' />
				</div>
				<div class="mb-6">
					<label class="block text-gray-700 text-sm font-bold mb-2" for="password">
						Password
					</label>
					<input @bind="@userDTO.Password" class="shadow appearance-none border border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="password" type="password">
					<ValidationMessage For='@(()=>@userDTO.Password)' />
				</div>
				<div class="flex items-center justify-between">
					<button class="bg-indigo-600 hover:bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
						Sign Up
					</button>
				</div>
			</EditForm>
			<div class="lg:mt-10 lg:mr-20 align-middle flex flex-col justify-center items-center">
				<a class="inline-block align-middle font-bold text-sm mt-5 text-indigo-600 hover:text-indigo-500" href="/signin">
					Login
				</a>
			</div>
		</div>
	</div>
</div>

@code {
	[Inject]
	HttpClient Client { get; set; }

	[Inject]
	NavigationManager navigationManager { get; set; }

	[CascadingParameter]
	public Task<AuthenticationState> AuthState { get; set; }

	private UserDTO userDTO = new();

	protected async override Task OnInitializedAsync()
	{
		var authState = await AuthState;
		if (authState.User.Identity.IsAuthenticated)
		{
			navigationManager.NavigateTo("/");
		}
	}

	protected async Task SubmitHandler()
	{
		var data = await Client.PostServiceResponseAsync<UserDTO, UserDTO>("api/User/Create", userDTO);

		if (data != null)
		{
			toastService.ShowSuccess("Successfully registered");
			navigationManager.NavigateTo("/signin");
		}
	}
}
