@page "/admin/promotion/start"
@layout AdminLayout
@inject IToastService toastService

<div class="flex flex-col justify-start mt-20 items-center h-screen">
	<h3 class="mt-20 font-bold text-2xl">Start Promotion</h3>
	<EditForm Model="@saleDTO" OnValidSubmit="SubmitHandler" class="bg-transparent rounded px-8 pt-6 pb-8 mb-4 w-full">
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="name">
				Promotion Name
			</label>
			<input @bind="@saleDTO.PromotionName" id="name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" type="text">
		</div>
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="discount">
				Discount %
			</label>
			<input @bind="@saleDTO.Discount" id="discount" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" min="10" max="90" step="5" type="number">
		</div>
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="category">
				Subcategory
			</label>
			<select class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" @bind="selectedCategoryId">
				@if (categoryList == null)
				{
					<option selected value="">None</option>
				}
				<option selected value="">Select a Subcategory</option>
				@foreach (var category in categoryList)
				{
					<optgroup label="@category.Name">
						@foreach (var subcategory in category.Subcategories)
						{
							<option value="@subcategory.Id">@subcategory.Name</option>
						}
					</optgroup>
				}
			</select>
		</div>
		<div class="mb-4">
			<label class="block text-gray-700 text-sm font-bold mb-2" for="category">
				Duration (Hour)
			</label>
			<input @bind="@saleDTO.Duration" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" min="1" step="1" type="number">
		</div>
		<div class="flex items-center justify-between">
			<button class="bg-indigo-600 hover:bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
				Start Promotion
			</button>
		</div>
	</EditForm>
</div>

@code {
	[Inject]
	HttpClient Client { get; set; }

	[Inject]
	ILocalStorageService localStorageService { get; set; }

	[Inject]
	NavigationManager navigationManager { get; set; }

	[CascadingParameter]
	public Task<AuthenticationState> AuthState { get; set; }

	[Parameter]
	public Guid Id { get; set; }

	private IEnumerable<CategoryDTO> categoryList = new List<CategoryDTO>();

	private Guid selectedCategoryId { get; set; }

	private bool? isAdmin { get; set; }

	private SaleDTO saleDTO { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthState;
		var isAdmin = await localStorageService.GetItemAsStringAsync("isAdmin");
		if (authState.User.Identity.IsAuthenticated && isAdmin == "true")
		{
			var emailInClaims = authState.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email).Value.ToString();
			var trimmedEmail = emailInClaims.Trim('"');
			var data = await Client.GetServiceResponseAsync<bool>($"api/Admin/Check/{trimmedEmail}");
			if (data == false)
			{
				navigationManager.NavigateTo("/");
			}
		}
		else
		{
			navigationManager.NavigateTo("/");
		}

		categoryList = await Client.GetServiceResponseAsync<IEnumerable<CategoryDTO>>($"api/Category/Get");
	}

	protected async Task SubmitHandler()
	{
		bool data = false;

		if (selectedCategoryId == Guid.Empty)
		{
			toastService.ShowError("Please select a category");
			return;
		}

		if (String.IsNullOrEmpty(saleDTO.PromotionName))
		{
			toastService.ShowError("Please enter a promotion name");
			return;
		}

		saleDTO.CategoryId = selectedCategoryId;

		bool promotionStarted = await Client.PostServiceResponseAsync<bool, SaleDTO>("api/Subcategory/Promotion/Start", saleDTO);

		if (promotionStarted)
		{
			data = await Client.PostServiceResponseAsync<bool, SaleDTO>("api/Product/Sale/Start", saleDTO);
		}

		if (data != false)
		{
			toastService.ShowSuccess("Started New Promotion");
			navigationManager.NavigateTo("/admin/promotions");
		}
	}
}
